<!DOCTYPE html>
<!--
 | Generated by Apache Maven Doxia at 2013-11-17
 | Rendered using Apache Maven Fluido Skin 1.3.0
-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Clinton Begin">
    <meta name="author" content="Nan Lei">
    <meta name="Date-Revision-yyyymmdd" content="20131117">
    <meta http-equiv="Content-Language" content="zh">
    <title>MyBatis - 
    MyBatis 3 | 动态 SQL</title>
    <link rel="stylesheet" href="apache-maven-fluido-1.css">
    <link rel="stylesheet" href="site.css">
    <link rel="stylesheet" href="print.css" media="print">

      
    <script type="text/javascript" src="apache-maven-fluido-1.js"></script>

    
            </head>
        <body class="topBarDisabled">
          
        
    
        <div class="container-fluid">
          <div id="banner">
        <div class="pull-left">
                                <div id="bannerLeft">
                <h2>MyBatis</h2>
                </div>
                      </div>
        <div class="pull-right">                                <a href="http://mybatis.github.io/mybatis-3/" id="bannerRight" title="MyBatis logo">
                                                                                        <img src="MyBatis%20-mybatis-logo.png" alt="MyBatis logo">
                </a>
      </div>
        <div class="clear"><hr></div>
      </div>

      <div id="breadcrumbs">
        <ul class="breadcrumb">
                
                    
                  <li id="publishDate">最近更新: 17 十一月 2013</li>
                  <li class="divider">|</li> <li id="projectVersion">版本: 3.2.4-SNAPSHOT</li>
                      
                
                    
      
                            </ul>
      </div>

            
      <div class="row-fluid">
        <div id="leftColumn" class="span3">
          <div class="well sidebar-nav">
                
                    
                <ul class="nav nav-list">
                    <li class="nav-header">Core</li>
                                
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/index.html" title="Introduction">
          <i class="none"></i>
        Introduction</a>
            </li>
                  
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/getting-started.html" title="入门">
          <i class="none"></i>
        入门</a>
            </li>
                                                                        
                                                                        
                                                                    
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/configuration.html" title="XML 映射配置文件">
          <i class="icon-chevron-right"></i>
        XML 映射配置文件</a>
                  </li>
                                                                        
                                                                        
              
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/sqlmap-xml.html" title="Mapper XML 文件">
          <i class="icon-chevron-right"></i>
        Mapper XML 文件</a>
                  </li>
                  
      <li class="active">
    
            <a href="#"><i class="none"></i>动态 SQL</a>
          </li>
                                                                                      
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/java-api.html" title="Java API">
          <i class="icon-chevron-right"></i>
        Java API</a>
                  </li>
                                                                                      
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/statement-builders.html" title="Statement Builders">
          <i class="icon-chevron-right"></i>
        Statement Builders</a>
                  </li>
                  
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/logging.html" title="Logging">
          <i class="none"></i>
        Logging</a>
            </li>
                              <li class="nav-header">项目文档</li>
                                                                        
                                                                        
                                                                        
                                                                
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/project-info.html" title="项目信息">
          <i class="icon-chevron-right"></i>
        项目信息</a>
                  </li>
                                                                        
                                                                        
                                                                        
                                
      <li>
    
                          <a href="http://mybatis.github.io/mybatis-3/zh/project-reports.html" title="项目报表">
          <i class="icon-chevron-right"></i>
        项目报表</a>
                  </li>
            </ul>
                
                    
                
          <hr class="divider">

           <div id="poweredBy">
                            <div class="clear"></div>
                            <div class="clear"></div>
                            <div class="clear"></div>
                             <a href="http://maven.apache.org/" title="构建依靠 Maven" class="poweredBy">
        <img class="builtBy" alt="构建依靠 Maven" src="MyBatis%20-%20MyBatis%203%20_%20%E5%8A%A8%E6%80%81%20SQL_files/maven-feather.png">
      </a>
                  </div>
          </div>
        </div>
        
                
        <div id="bodyColumn" class="span9">
                                  
            <!-- Copyright 2010-2012 the original author or authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. --><!-- version: $Id$ -->

  
  <div class="section"><h2>动态 SQL<a name="a_SQL"></a></h2>
  <p>
MyBatis 的一个强大的特性之一通常是它的动态 SQL 能力。
如果你有使用 JDBC 或其他
相似框架的经验,你就明白条件地串联 SQL 字符串在一起是多么的痛苦,确保不能忘了空
格或在列表的最后省略逗号。动态 SQL 可以彻底处理这种痛苦。
  </p>
  <p>
通常使用动态 SQL 不可能是独立的一部分,MyBatis 当然使用一种强大的动态 SQL 语
言来改进这种情形,这种语言可以被用在任意映射的 SQL 语句中。
  </p>
  <p>
动态 SQL 元素和使用 JSTL 或其他相似的基于 XML 的文本处理器相似。在 MyBatis 之
前的版本中,有很多的元素需要来了解。MyBatis 3 大大提升了它们,现在用不到原先一半
的元素就能工作了。MyBatis 采用功能强大的基于 OGNL 的表达式来消除其他元素。
  </p>  
  <ul>
    <li>if</li>
    <li>choose (when, otherwise)</li>
    <li>trim (where, set)</li>
    <li>foreach</li>
  </ul>
  <a name="if"></a><div class="section" id="if"><h3>if<a name="if"></a></h3>
  <p>
在动态 SQL 中所做的最通用的事情是包含部分 where 字句的条件。比如:
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"findActiveBlogWithTitleLike"</span><span class="pln"> 
     </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="tag">&gt;</span><span class="pln">
  SELECT * FROM BLOG 
  WHERE state = ‘ACTIVE’ 
  </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"title != null"</span><span class="tag">&gt;</span><span class="pln">
    AND title like #{title}
  </span><span class="tag">&lt;/if&gt;</span><span class="pln">
</span><span class="tag">&lt;/select&gt;</span></pre></div>  
  <p>
这条语句会提供一个可选的文本查找功能。如果你没有传递 title,那么所有激活的博客
都会被返回。但是如果你传递了 title,那么就会查找相近的 title(对于敏锐的检索,这中情
况下你的参数值需要包含任意的遮掩或通配符)的博客。
  </p>
  <p>
假若我们想可选地搜索 title 和 author 呢?首先,要改变语句的名称让它有意义。然后
简单加入另外的一个条件。
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"findActiveBlogLike"</span><span class="pln"> 
     </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="tag">&gt;</span><span class="pln">
  SELECT * FROM BLOG WHERE state = ‘ACTIVE’ 
  </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"title != null"</span><span class="tag">&gt;</span><span class="pln">
    AND title like #{title}
  </span><span class="tag">&lt;/if&gt;</span><span class="pln">
  </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"author != null and author.name != null"</span><span class="tag">&gt;</span><span class="pln">
    AND author_name like #{author.name}
  </span><span class="tag">&lt;/if&gt;</span><span class="pln">
</span><span class="tag">&lt;/select&gt;</span></pre></div>
  </div>
  <a name="chooseWhenOtherwise"></a><div class="section" id="chooseWhenOtherwise"><h3>choose, when, otherwise<a name="choose_when_otherwise"></a></h3>
  <p>
有时我们不想应用所有的条件,
相反我们想选择很多情况下的一种。 Java 中的 switch
和
语句相似,MyBatis 提供 choose 元素。
  </p>
  <p>
我们使用上面的示例,但是现在我们来搜索当 title 提供时仅有 title 条件,当 author 提
供时仅有 author 条件。如果二者都没提供,只返回 featured blogs(也许是由管理员策略地选
择的结果列表,而不是返回大量没有意义的随机博客结果列表)。
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"findActiveBlogLike"</span><span class="pln"> 
     </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="tag">&gt;</span><span class="pln">
  SELECT * FROM BLOG WHERE state = ‘ACTIVE’
  </span><span class="tag">&lt;choose&gt;</span><span class="pln">
    </span><span class="tag">&lt;when</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"title != null"</span><span class="tag">&gt;</span><span class="pln">
      AND title like #{title}
    </span><span class="tag">&lt;/when&gt;</span><span class="pln">
    </span><span class="tag">&lt;when</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"author != null and author.name != null"</span><span class="tag">&gt;</span><span class="pln">
      AND author_name like #{author.name}
    </span><span class="tag">&lt;/when&gt;</span><span class="pln">
    </span><span class="tag">&lt;otherwise&gt;</span><span class="pln">
      AND featured = 1
    </span><span class="tag">&lt;/otherwise&gt;</span><span class="pln">
  </span><span class="tag">&lt;/choose&gt;</span><span class="pln">
</span><span class="tag">&lt;/select&gt;</span></pre></div>
  </div>
  <a name="trimWhereSet"></a><div class="section" id="trimWhereSet"><h3>trim, where, set<a name="trim_where_set"></a></h3>
  <p>
前面的例子已经方便地处理了一个臭名昭著的动态 SQL 问题。要考虑我们回到“if”示
例后会发生什么,但是这次我们将“ACTIVE = 1”也设置成动态的条件。
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"findActiveBlogLike"</span><span class="pln"> 
     </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="tag">&gt;</span><span class="pln">
  SELECT * FROM BLOG 
  WHERE 
  </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"state != null"</span><span class="tag">&gt;</span><span class="pln">
    state = #{state}
  </span><span class="tag">&lt;/if&gt;</span><span class="pln"> 
  </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"title != null"</span><span class="tag">&gt;</span><span class="pln">
    AND title like #{title}
  </span><span class="tag">&lt;/if&gt;</span><span class="pln">
  </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"author != null and author.name != null"</span><span class="tag">&gt;</span><span class="pln">
    AND author_name like #{author.name}
  </span><span class="tag">&lt;/if&gt;</span><span class="pln">
</span><span class="tag">&lt;/select&gt;</span></pre></div>
  <p>
如果这些条件都没有匹配上将会发生什么?这条 SQL 结束时就会成这样:
  </p>
  <div class="source"><pre class="prettyprint"><span class="pln">SELECT </span><span class="pun">*</span><span class="pln"> FROM BLOG 
WHERE</span></pre></div>
  <p>
这会导致查询失败。如果仅仅第二个条件匹配是什么样的?这条 SQL 结束时就会是这
样:
  </p>
  <div class="source"><pre class="prettyprint"><span class="pln">SELECT </span><span class="pun">*</span><span class="pln"> FROM BLOG 
WHERE 
AND title like </span><span class="pun">‘</span><span class="pln">someTitle</span><span class="pun">’</span></pre></div>
  <p>
这个查询也会失败。这个问题不能简单的用条件来解决,如果你从来没有这样写过,那
么你以后也不会这样来写。
  </p>
  <p>
MyBatis 有一个简单的处理,这在 90%的情况下都会有用。而在不能使用的地方,你可
以自定义处理方式。加上一个简单的改变,所有事情都会顺利进行:
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"findActiveBlogLike"</span><span class="pln"> 
     </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="tag">&gt;</span><span class="pln">
  SELECT * FROM BLOG 
  </span><span class="tag">&lt;where&gt;</span><span class="pln"> 
    </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"state != null"</span><span class="tag">&gt;</span><span class="pln">
         state = #{state}
    </span><span class="tag">&lt;/if&gt;</span><span class="pln"> 
    </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"title != null"</span><span class="tag">&gt;</span><span class="pln">
        AND title like #{title}
    </span><span class="tag">&lt;/if&gt;</span><span class="pln">
    </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"author != null and author.name != null"</span><span class="tag">&gt;</span><span class="pln">
        AND author_name like #{author.name}
    </span><span class="tag">&lt;/if&gt;</span><span class="pln">
  </span><span class="tag">&lt;/where&gt;</span><span class="pln">
</span><span class="tag">&lt;/select&gt;</span></pre></div> 
  <p>
where 元素知道如果由被包含的标记返回任意内容,就仅仅插入“WHERE”
。而且,如
果以“AND”或“OR”开头的内容,那么就会跳过 WHERE 不插入。
  </p>  
  <p>
如果 where 元素没有做出你想要的,你可以使用 trim 元素来自定义。比如,和 where
元素相等的 trim 元素是:
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;trim</span><span class="pln"> </span><span class="atn">prefix</span><span class="pun">=</span><span class="atv">"WHERE"</span><span class="pln"> </span><span class="atn">prefixOverrides</span><span class="pun">=</span><span class="atv">"AND |OR "</span><span class="tag">&gt;</span><span class="pln">
  ... 
</span><span class="tag">&lt;/trim&gt;</span></pre></div>  
  <p>
prefixOverrides 属性采用管道文本分隔符来覆盖,
这里的空白也是重要的。
它的结果就是移除
在 prefixOverrides 属性中指定的内容,插入在 with 属性中的内容。
  </p>
  <p>
和动态更新语句相似的解决方案是 set。set 元素可以被用于动态包含更新的列,而不包
含不需更新的。比如:
</p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;update</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"updateAuthorIfNecessary"</span><span class="pln">
       </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"domain.blog.Author"</span><span class="tag">&gt;</span><span class="pln">
  update Author
    </span><span class="tag">&lt;set&gt;</span><span class="pln">
      </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"username != null"</span><span class="tag">&gt;</span><span class="pln">username=#{username},</span><span class="tag">&lt;/if&gt;</span><span class="pln">
      </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"password != null"</span><span class="tag">&gt;</span><span class="pln">password=#{password},</span><span class="tag">&lt;/if&gt;</span><span class="pln">
      </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"email != null"</span><span class="tag">&gt;</span><span class="pln">email=#{email},</span><span class="tag">&lt;/if&gt;</span><span class="pln">
      </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"bio != null"</span><span class="tag">&gt;</span><span class="pln">bio=#{bio}</span><span class="tag">&lt;/if&gt;</span><span class="pln">
    </span><span class="tag">&lt;/set&gt;</span><span class="pln">
  where id=#{id}
</span><span class="tag">&lt;/update&gt;</span></pre></div>
  <p>
这里,set 元素会动态前置 SET 关键字,而且也会消除任意无关的逗号,那也许在应用
条件之后来跟踪定义的值。
  </p>  
  <p>
如果你对和这相等的 trim 元素好奇,它看起来就是这样的:
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;trim</span><span class="pln"> </span><span class="atn">prefix</span><span class="pun">=</span><span class="atv">"SET"</span><span class="pln"> </span><span class="atn">suffixOverrides</span><span class="pun">=</span><span class="atv">","</span><span class="tag">&gt;</span><span class="pln">
  ...
</span><span class="tag">&lt;/trim&gt;</span></pre></div>
  <p>
注意这种情况下我们覆盖一个后缀,而同时也附加前缀。
  </p>
  </div>
  <div class="section"><h3>foreach<a name="foreach"></a></h3>
  <p>
另外一个动态 SQL 通用的必要操作是迭代一个集合,
通常是构建在 IN 条件中的。
比如:
  </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"selectPostIn"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"domain.blog.Post"</span><span class="tag">&gt;</span><span class="pln">
  SELECT *
  FROM POST P
  WHERE ID in
  </span><span class="tag">&lt;foreach</span><span class="pln"> </span><span class="atn">item</span><span class="pun">=</span><span class="atv">"item"</span><span class="pln"> </span><span class="atn">index</span><span class="pun">=</span><span class="atv">"index"</span><span class="pln"> </span><span class="atn">collection</span><span class="pun">=</span><span class="atv">"list"</span><span class="pln">
      </span><span class="atn">open</span><span class="pun">=</span><span class="atv">"("</span><span class="pln"> </span><span class="atn">separator</span><span class="pun">=</span><span class="atv">","</span><span class="pln"> </span><span class="atn">close</span><span class="pun">=</span><span class="atv">")"</span><span class="tag">&gt;</span><span class="pln">
        #{item}
  </span><span class="tag">&lt;/foreach&gt;</span><span class="pln">
</span><span class="tag">&lt;/select&gt;</span></pre></div>
  <p>
foreach 元素是非常强大的,它允许你指定一个集合,声明集合项和索引变量,它们可
以用在元素体内。它也允许你指定开放和关闭的字符串,在迭代之间放置分隔符。这个元素
是很智能的,它不会偶然地附加多余的分隔符。
  </p>
  <p>
  <span class="label important">注意</span> 你可以传递一个 List 实例或者数组作为参数对象传给 MyBatis。当你这么做的时
候,MyBatis 会自动将它包装在一个 Map 中,用名称在作为键。List 实例将会以“list”
作为键,而数组实例将会以“array”作为键。
  </p>
  <p>
这个部分是对关于 XML 配置文件和 XML 映射文件的而讨论的。下一部分将详细讨论
Java API,所以你可以得到你已经创建的最有效的映射。
  </p>
  </div>  
  <div class="section"><h3>bind<a name="bind"></a></h3>
  <p>The <tt>bind</tt> element lets you create a variable out of an OGNL expression and bind it to the context. For example:</p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"selectBlogsLike"</span><span class="pln"> </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"Blog"</span><span class="tag">&gt;</span><span class="pln">
  </span><span class="tag">&lt;bind</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"pattern"</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"'%' + _parameter.getTitle() + '%'"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln">
  SELECT * FROM BLOG
  WHERE title LIKE #{pattern}
</span><span class="tag">&lt;/select&gt;</span></pre></div>
  </div>
  <div class="section"><h3>Multi-db vendor support<a name="Multi-db_vendor_support"></a></h3>
  <p>If a databaseIdProvider was configured a "_databaseId" variable is 
available for dynamic code, so you can build different statements 
depending on database vendor. Have a look at the following example:</p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;insert</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"insert"</span><span class="pln"> </span><span class="atn">parameterType</span><span class="pun">=</span><span class="atv">"org.myapp.domain.User"</span><span class="tag">&gt;</span><span class="pln">
  </span><span class="tag">&lt;selectKey</span><span class="pln"> </span><span class="atn">keyProperty</span><span class="pun">=</span><span class="atv">"id"</span><span class="pln"> </span><span class="atn">resultType</span><span class="pun">=</span><span class="atv">"int"</span><span class="pln"> </span><span class="atn">order</span><span class="pun">=</span><span class="atv">"BEFORE"</span><span class="tag">&gt;</span><span class="pln">
    </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"_databaseId == 'oracle'"</span><span class="tag">&gt;</span><span class="pln">
      select seq_users.nextval from dual
    </span><span class="tag">&lt;/if&gt;</span><span class="pln">
    </span><span class="tag">&lt;if</span><span class="pln"> </span><span class="atn">test</span><span class="pun">=</span><span class="atv">"_databaseId == 'db2'"</span><span class="tag">&gt;</span><span class="pln">
      select nextval for seq_users from sysibm.sysdummy1"
    </span><span class="tag">&lt;/if&gt;</span><span class="pln">
  </span><span class="tag">&lt;/selectKey&gt;</span><span class="pln">
  insert into users values (#{id}, #{name})
</span><span class="tag">&lt;/insert&gt;</span></pre></div>
  </div>
  <div class="section"><h3>Pluggable Scripting Languages For Dynamic SQL<a name="Pluggable_Scripting_Languages_For_Dynamic_SQL"></a></h3>
    <p>Starting from version 3.2 MyBatis supports pluggable scripting languages,
    so you can plug a language driver and use that language to write your dynamic
    SQL queries.</p>
    <p>There are two built-in languages:</p>
    <ul>
    <li>xml</li>
    <li>raw</li>
    </ul>
    <p>The <tt>xml</tt> language is the default one. It is able to execute all the dynamic tags we saw in the previous sections.</p>
    <p>The <tt>raw</tt> language is in fact the absence of language. When using this setting MyBatis just performs the 
    parameter substitution and passes the statement to the database driver. As you may guess, the <tt>raw</tt> language 
    is faster than the <tt>xml</tt> language.
    </p>
    <p>You can specify the language you want to use in an statement adding the <tt>lang</tt> attribute as follows:
    </p>
  <div class="source"><pre class="prettyprint"><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"selectBlog"</span><span class="pln"> </span><span class="atn">lang</span><span class="pun">=</span><span class="atv">"raw"</span><span class="tag">&gt;</span><span class="pln">
  SELECT * FROM BLOG
</span><span class="tag">&lt;/select&gt;</span></pre></div>
    <p>Or, in the case you are using mappers, using the <tt>@Lang</tt> annotation:</p>
  <div class="source"><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Mapper</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="lit">@Lang</span><span class="pun">(</span><span class="typ">RawLanguageDriver</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln">
  </span><span class="lit">@Select</span><span class="pun">(</span><span class="str">"SELECT * FROM BLOG"</span><span class="pun">)</span><span class="pln">
  </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">Blog</span><span class="pun">&gt;</span><span class="pln"> selectBlog</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></div>
    <p>You can also implement your own language driver by implementing the following interface:</p>
  <div class="source"><pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">LanguageDriver</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="typ">ParameterHandler</span><span class="pln"> createParameterHandler</span><span class="pun">(</span><span class="typ">MappedStatement</span><span class="pln"> mappedStatement</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> parameterObject</span><span class="pun">,</span><span class="pln"> </span><span class="typ">BoundSql</span><span class="pln"> boundSql</span><span class="pun">);</span><span class="pln">
  </span><span class="typ">SqlSource</span><span class="pln"> createSqlSource</span><span class="pun">(</span><span class="typ">Configuration</span><span class="pln"> configuration</span><span class="pun">,</span><span class="pln"> </span><span class="typ">XNode</span><span class="pln"> script</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Class</span><span class="pun">&lt;?&gt;</span><span class="pln"> parameterType</span><span class="pun">);</span><span class="pln">
  </span><span class="typ">SqlSource</span><span class="pln"> createSqlSource</span><span class="pun">(</span><span class="typ">Configuration</span><span class="pln"> configuration</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> script</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Class</span><span class="pun">&lt;?&gt;</span><span class="pln"> parameterType</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></div>    
	</div>
  </div>
  

                  </div>
            </div>
          </div>

    <hr>

    <footer>
            <div class="container-fluid">
              <div class="row span12">Copyright ©                    2010-2013
                        <a href="http://www.mybatis.org/">MyBatis.org</a>.
            All Rights Reserved.      
                    
      </div>

        
        
                </div>
    </footer>
  

</body></html>